<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Feedback">

	<!-- Use type aliases to avoid typing the full classname every time. -->
	<typeAlias alias="Feedback"
		type="com.pearl.normandy.feedback.FeedbackTo" />
		
	<resultMap id="selectFeedbackResult" class="Feedback">
		<result property="id" column="id"/>
		<result property="taskId" column="taskId"/>
		<result property="checkItemId" column="checkItemId"/>
		<result property="ownerId" column="ownerId"/>
		<result property="category" column="category"/>		
		<result property="errorText" column="errorText"/>
		<result property="severity" column="severity"/>
		<result property="type" column="type"/>
		<result property="status" column="status"/>
		<result property="description" column="description"/>								
		<result property="version" column="version"/>
		<result property="createdDate" column="createdDate"/>
		<result property="createdBy" column="createdBy"/>
		<result property="updatedDate" column="updatedDate"/>
		<result property="updatedBy" column="updatedBy"/>
		
		<result property="projectKey" column="projectKey"/>
		<result property="ownerName" column="ownerName"/>				
		<result property="severityValue" column="severityValue"/>
		<result property="typeValue" column="typeValue"/>
		<result property="statusValue" column="statusValue"/>
		<result property="feedbackReference" column="id" select="FeedbackReference.selectFeedbackReferenceByFeedbackId"/>
	</resultMap>


	<select id="selectFeedback" parameterClass="java.util.Map" resultClass="Feedback">
		select
			f.ID				as id,
			f.TASK_ID			as taskId,
			t.TASK_NAME			as taskName,
			f.ERROR_TEXT      	as errorText,
			f.SEVERITY			as severity,
			l.LIST_VALUE    	as severityValue,
			f.TYPE				as type,
			lt.LIST_VALUE    	as typeValue,
			f.STATUS			as status,
      		ls.LIST_VALUE   	as statusValue,
			f.DESCRIPTION		as description,
			f.VERSION			as version,
			f.CREATED_DATE		as createdDate,
			f.CREATED_BY		as createdBy,
			f.UPDATED_DATE		as updatedDate,
			f.UPDATED_BY		as updatedBy
		from FEEDBACK f left join LIST_OF_VALUE ls on ls.LIST_KEY = f.STATUS,
		 	LIST_OF_VALUE l, LIST_OF_VALUE lt, TASK t
		where f.TASK_ID = t.ID
		<dynamic>
			<isNotNull prepend="and" property="projectId">
				t.PROJECT_ID = #projectId#
			</isNotNull>		
			<isNotNull prepend="and" property="milestone">
				t.MILESTONE=#milestone#
			</isNotNull>	
			<isNotNull prepend="and" property="type">
				f.TYPE = #type#
			</isNotNull>	
			<isNotNull prepend="and" property="status">
				f.status = #status#
			</isNotNull>						
			<isEqual prepend="and" property="priority" compareValue="Low">
				f.SEVERITY = 'SEVERITY_LOW'
			</isEqual>
			<isEqual prepend="and" property="priority" compareValue="Medium">
				f.SEVERITY = 'SEVERITY_MEDIUM'
			</isEqual>
			<isEqual prepend="and" property="priority" compareValue="High">
				f.SEVERITY = 'SEVERITY_HIGH'
			</isEqual>
		</dynamic>
		and l.LIST_KEY = f.SEVERITY
	    and lt.LIST_KEY = f.TYPE
	</select>

	
	<select id="selectFeedbackByTaskId" parameterClass="java.util.Map" resultMap="selectFeedbackResult">
   		 select
			f.ID						as id,
			f.TASK_ID					as taskId,
			f.CHECK_ITEM_ID				as checkItemId,
			f.OWNER_ID					as ownerId,
			f.CATEGORY					as category,			
			f.ERROR_TEXT				as errorText,
			f.SEVERITY					as severity,	
			f.TYPE						as type,	
			f.STATUS					as status,			
			f.DESCRIPTION				as description,
			f.VERSION					as version,
			f.CREATED_DATE				as createdDate,
			f.CREATED_BY				as createdBy,
			f.UPDATED_DATE				as updatedDate,
			f.UPDATED_BY				as updatedBy,
			
   		    p.PROJECT_KEY				as projectKey,
       	    concat(u.FIRST_NAME,' ',u.LAST_NAME) 				as ownerName,       		    			
		    ls.LIST_VALUE   		    as severityValue,
		    lt.LIST_VALUE  	 	    	as typeValue,
		    l.LIST_VALUE   				as statusValue
		from PROJECT p, TASK t, FEEDBACK f left join LIST_OF_VALUE l on f.STATUS=l.LIST_KEY
    		left join LIST_OF_VALUE ls on f.SEVERITY=ls.LIST_KEY,
        	LIST_OF_VALUE lt, USER u
		where f.TASK_ID=#taskId#
		and f.CATEGORY=#category#
		and f.TASK_ID = t.ID			
		and t.PROJECT_ID = p.ID
    	and f.TYPE=lt.LIST_KEY 
   		and f.OWNER_ID=u.ID
   		order by f.ID
	</select>
	
		
	<select id="selectFeedbackByCheckItemId" parameterClass="java.lang.Integer" resultMap="selectFeedbackResult">
   		 select
			f.ID						as id,
			f.TASK_ID					as taskId,
			f.CHECK_ITEM_ID				as checkItemId,
			f.OWNER_ID					as ownerId,
			f.CATEGORY					as category,			
			f.ERROR_TEXT				as errorText,
			f.SEVERITY					as severity,	
			f.TYPE						as type,	
			f.STATUS					as status,			
			f.DESCRIPTION				as description,
			f.VERSION					as version,
			f.CREATED_DATE				as createdDate,
			f.CREATED_BY				as createdBy,
			f.UPDATED_DATE				as updatedDate,
			f.UPDATED_BY				as updatedBy,
			
   		    p.PROJECT_KEY				as projectKey,
       	    concat(u.FIRST_NAME,' ',u.LAST_NAME) 				as ownerName,       		    			
		    ls.LIST_VALUE   		    as severityValue,
		    lt.LIST_VALUE  	 	    	as typeValue,
		    l.LIST_VALUE   				as statusValue
		from PROJECT p, TASK t, FEEDBACK f left join LIST_OF_VALUE l on f.STATUS=l.LIST_KEY
    		left join LIST_OF_VALUE ls on f.SEVERITY=ls.LIST_KEY,
        	LIST_OF_VALUE lt, USER u
		where f.CHECK_ITEM_ID=#value#
		and f.TASK_ID = t.ID			
		and t.PROJECT_ID = p.ID
    	and f.TYPE=lt.LIST_KEY 
   		and f.OWNER_ID=u.ID
   		order by f.ID
	</select>
	
	<!--========================= Insert/Update/Delete ========================-->
	<insert id="insert" parameterClass="Feedback">
		insert into FEEDBACK
		(ID,
		TASK_ID,
		CHECK_ITEM_ID,
		OWNER_ID,
		CATEGORY,
		ERROR_TEXT,
		SEVERITY,
		TYPE,
		STATUS,
		DESCRIPTION,
		VERSION,
		CREATED_DATE,
		CREATED_BY)
		
		values
		
		(#id#,
		#taskId#,
		#checkItemId#,
		#ownerId#,
		#category#,
		#errorText#,
		#severity#,
		#type#,
		#status#,
		#description#,
		#version#,
		#createdDate#,
		#createdBy#)
		<selectKey resultClass="int" keyProperty="id">
			SELECT @@IDENTITY AS ID
		</selectKey>
	</insert>
	
	<update id="update" parameterClass="Feedback">
		update FEEDBACK set
			ERROR_TEXT = #errorText#,			
			SEVERITY = #severity#,
			TYPE = #type#,
			STATUS = #status#,
			DESCRIPTION = #description#,
			VERSION = #version#,
			UPDATED_DATE = #updatedDate#,
			UPDATED_BY = #updatedBy#
		where ID = #id#
	</update>	
	
	<delete id="delete" parameterClass="java.lang.Integer">
		delete from FEEDBACK
		where ID=#value#
	</delete>
</sqlMap>