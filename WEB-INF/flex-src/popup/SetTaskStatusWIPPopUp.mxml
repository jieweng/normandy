<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	title="Set Task Status WIP"
	width="600" height="500" borderAlpha="1"
	showCloseButton="true"
	creationComplete="init()"
	keyDown="onKeyDown(event)"
	close="PopUpManager.removePopUp(this)">	
	 
	<mx:Script source="../script/CommonScript.as"/> 
	<mx:Script>
		<![CDATA[
			import com.pearl.normandy.vo.ActivityVO;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			  
			import com.pearl.normandy.utils.NormandyModel;
						
		    //==============================
		    //Data Attributes
		    //==============================
		    private var _task:TaskVO;
		    [Bindable]
		    public function set task(value:TaskVO):void{
		    	this._task = value
				activityRo.getActivitiesByTaskId(task.id);		    	
		    }		    
		    
		    public function get task():TaskVO{
		    	return this._task;
		    }
		    
		    [Bindable]
		    private var activities:ArrayCollection;
		     			
			private var wipActivities:ArrayCollection;
			
			
 		    //==============================
		    //Methods
		    //==============================   		
			private function init():void{
				this.setFocus();	
			}			    
		    	

			
		    //==============================
		    //Remote Object Handlers
		    //==============================			
			private function getActivitiesByTaskIdHandler(event:ResultEvent):void{
				activities = event.result as ArrayCollection;
			}
			
		    //==============================
		    //Event Handler
		    //==============================
		    private function onKeyDown(event:KeyboardEvent):void{
		    	if(event.keyCode == Keyboard.ESCAPE){
		    		PopUpManager.removePopUp(this);
		    	}
		    }		
		    
		    private function onOkBtnClick():void{
		    	wipActivities = new ArrayCollection();
		    	
		    	for each(var activity:ActivityVO in activities){
		    		if(activity.selected){
		    			wipActivities.addItem(activity);
		    		}
		    	}
		    	
		    	taskRo.setStatusWIP(task.id, wipActivities);
		    	PopUpManager.removePopUp(this);
		    }					
		]]>
	</mx:Script>
	<!--==========================
	    Services
	===========================-->
	<mx:RemoteObject id="activityRo" destination="ro.activity" fault="faultHandler(event)">
		<mx:method name="getActivitiesByTaskId" result="getActivitiesByTaskIdHandler(event)"/>
	</mx:RemoteObject>
	
	<mx:RemoteObject id="taskRo" destination="ro.task" fault="faultHandler(event)">
		<mx:method name="setStatusWIP"/>
	</mx:RemoteObject>
	
	
	 <!--==========================
	    Page Layout
  	 ===========================-->	
  	<mx:Label text="{resourceManager.getString('Language','alert.subtask.set_wip')}"/>
	<mx:AdvancedDataGrid id="activityADG"
		width="100%" height="100%" dataProvider="{activities}">
		<mx:columns>				
			<mx:AdvancedDataGridColumn dataField="resourceName" editable="false" width="60"
				headerText="{resourceManager.getString('Language','label.artist')}"/>
			<mx:AdvancedDataGridColumn dataField="startTime" editable="false" width="100"
				headerText="{resourceManager.getString('Language','label.start_time')}" labelFunction="formatDateSimple"/>
			<mx:AdvancedDataGridColumn dataField="endTime" editable="false" width="100"
				headerText="{resourceManager.getString('Language','label.end_time')}" labelFunction="formatDateSimple"/>					
			<mx:AdvancedDataGridColumn width="30"
				headerText="{resourceManager.getString('Language','label.feedback')}"
				itemRenderer="renderer.dataGrid.FeedbackRenderer">
			  	<mx:headerRenderer>
			  		<mx:Component>
              			<mx:HBox horizontalAlign="center" verticalAlign="middle">             				
	              			<mx:Image width="16" height="16"
	              				source="{ImageEnum.IMAGECLASS_FEEDBACK}">
	              				<mx:Script>
	              					<![CDATA[
	              						import com.pearl.normandy.enum.ImageEnum;
	              					]]>
	              				</mx:Script>
	              			</mx:Image>
              			</mx:HBox>	   			  			
			  		</mx:Component>
			  	</mx:headerRenderer>				
			</mx:AdvancedDataGridColumn>	
			<mx:AdvancedDataGridColumn width="30" textAlign="center"
				rendererIsEditor="true"
				editorDataField="selected">
              	<mx:itemRenderer>
              		<mx:Component>
              			<mx:CheckBox change="onChange(event)">              				
							<mx:Script>  
                           <![CDATA[
                           	import mx.controls.CheckBox;                     
                           	
                         		private function onChange(event:Event):void{
                         			var cb:CheckBox = event.currentTarget as CheckBox;
                         			data.selected = cb.selected;
                         		}                         	 	         		
                           ]]>
                           </mx:Script>
              			</mx:CheckBox>
              		</mx:Component>   
              	</mx:itemRenderer> 				
			</mx:AdvancedDataGridColumn>									
		</mx:columns>
	</mx:AdvancedDataGrid>
	
	 <mx:ControlBar width="100%" horizontalAlign="center">
		<mx:Button id="ok" label="{resourceManager.getString('Language','button.ok')}" click="onOkBtnClick()"/>
        <mx:Button id="cancel" label="{resourceManager.getString('Language','button.cancel')}"
            click="PopUpManager.removePopUp(this);"/>
	</mx:ControlBar>
</mx:TitleWindow>